"use strict";var KEYMAP={TAB:9};function initNavigation(){initNavToggleSubmenus(),initNavToggleSmall(),scrollToTop()}function initNavToggleSubmenus(){var e=document.querySelectorAll(".nav--toggle-sub");if(e.length)for(var t=0;t<e.length;t++)initEachNavToggleSubmenu(e[t])}function initEachNavToggleSubmenu(e){var t=e.querySelectorAll(".menu ul");if(t.length)for(var n=getDropdownButton(),o=0;o<t.length;o++){var l=t[o].parentNode,a=l.querySelector(".dropdown"),r=(a||((a=document.createElement("span")).classList.add("dropdown"),(r=document.createElement("i")).classList.add("dropdown-symbol"),a.appendChild(r),t[o].parentNode.insertBefore(a,t[o])),n.cloneNode(!0));r.innerHTML=a.innerHTML,a.parentNode.replaceChild(r,a),r.addEventListener("click",function(e){toggleSubMenu(e.target.parentNode)}),l.addEventListener("mouseleave",function(e){toggleSubMenu(e.target,!1)}),l.querySelector("a").addEventListener("focus",function(e){for(var t=e.target.parentNode.parentNode.querySelectorAll("li.menu-item--toggled-on"),n=0;n<t.length;n++)toggleSubMenu(t[n],!1)}),t[o].addEventListener("keydown",function(e){var t="ul.toggle-show > li > a, ul.toggle-show > li > button";KEYMAP.TAB===e.keyCode&&(e.shiftKey?isfirstFocusableElement(e.target,document.activeElement,t)&&toggleSubMenu(e.target.parentNode,!1):islastFocusableElement(e.target,document.activeElement,t)&&toggleSubMenu(e.target.parentNode,!1))}),t[o].parentNode.classList.add("menu-item--has-toggle")}}function initNavToggleSmall(){var e=document.querySelectorAll(".nav--toggle-small");if(e.length)for(var t=0;t<e.length;t++)initEachNavToggleSmall(e[t])}function initEachNavToggleSmall(t){var e=t.querySelector(".menu-toggle");e&&(e.setAttribute("aria-expanded","false"),e.addEventListener("click",function(e){t.classList.toggle("nav--toggled-on"),e.target.setAttribute("aria-expanded","false"===e.target.getAttribute("aria-expanded")?"true":"false")},!1))}function toggleSubMenu(e,t){var n=e.querySelector(".dropdown-toggle"),o=e.querySelector("ul"),l=e.classList.contains("menu-item--toggled-on");if(n.setAttribute("aria-expanded",(!(l=void 0!==t&&"boolean"==typeof t?!t:l)).toString()),l){e.classList.remove("menu-item--toggled-on"),o.classList.remove("toggle-show"),n.setAttribute("aria-label",wpRigScreenReaderText.expand);for(var a=e.querySelectorAll(".menu-item--toggled-on"),r=0;r<a.length;r++)toggleSubMenu(a[r],!1)}else{for(var i=e.parentNode.querySelectorAll("li.menu-item--toggled-on"),u=0;u<i.length;u++)toggleSubMenu(i[u],!1);e.classList.add("menu-item--toggled-on"),o.classList.add("toggle-show"),n.setAttribute("aria-label",wpRigScreenReaderText.collapse)}}function getDropdownButton(){var e=document.createElement("button");return e.classList.add("dropdown-toggle"),e.setAttribute("aria-expanded","false"),e.setAttribute("aria-label",wpRigScreenReaderText.expand),e}function isfirstFocusableElement(e,t,n){e=e.querySelectorAll(n);return 0<e.length&&t===e[0]}function islastFocusableElement(e,t,n){e=e.querySelectorAll(n);return 0<e.length&&t===e[e.length-1]}function scrollToTop(){document.querySelector(".scroll-top__button").addEventListener("click",function(){window.scrollTo({top:0,behavior:"smooth"})})}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",initNavigation):initNavigation();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,